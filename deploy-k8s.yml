# Source: gedocc-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: template-api
  labels:
    app.kubernetes.io/name: template-api
    app.kubernetes.io/instance: template-api
spec:
  type: ClusterIP
  ports:
    - port: 8083
      targetPort: 8083
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: template-api
    app.kubernetes.io/instance: template-api
---
# Source: gedocc-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: template-api
  labels:
    app.kubernetes.io/name: template-api
    app.kubernetes.io/instance: template-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: template-api
      app.kubernetes.io/instance: template-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: template-api
        app.kubernetes.io/instance: template-api
    spec:
      imagePullSecrets:
        - name: difesa-sipad-user
      serviceAccountName: default
      securityContext:
        {}
      containers:
      - env:
        - name: DB_ARQ_USERNAME
          valueFrom:
            secretKeyRef:
              key: spring.datasource.username
              name: db-arq-secret
              optional: false
        - name: DB_ARQ_PASSWORD
          valueFrom:
            secretKeyRef:
              key: spring.datasource.password
              name: db-arq-secret
              optional: false
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              key: jwt.secret
              name: db-arq-secret
              optional:
                false
        envFrom:
        - configMapRef:
            name: arq-config-map
        name: template-api
        securityContext:
          {}
        image: almaviva.jfrog.io/difesa-sipad-docker/transversal/template-api:#{Build.BuildId}#
        imagePullPolicy: IfNotPresent
        ports:
          - name: http
            containerPort: 8083
            protocol: TCP
        resources:
          {}
---